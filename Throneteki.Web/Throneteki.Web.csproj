<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <DockerComposeProjectPath>..\docker-compose.dcproj</DockerComposeProjectPath>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <SpaProxyLaunchCommand>npm run dev</SpaProxyLaunchCommand>
    <SpaProxyServerUrl>http://localhost:5173</SpaProxyServerUrl>
    <SpaRoot>clientapp\</SpaRoot>
    <TargetFramework>net8.0</TargetFramework>
    <TypeScriptToolsVersion>latest</TypeScriptToolsVersion>
    <UserSecretsId>eba033a2-f6f4-4056-bd18-a4c458f6cd61</UserSecretsId>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="12.0.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="12.0.1" />
    <PackageReference Include="EFCore.NamingConventions" Version="8.0.0-rc.2" />
    <PackageReference Include="JorgeSerrano.Json.JsonSnakeCaseNamingPolicy" Version="0.9.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="8.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="8.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="8.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="8.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="8.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="8.0.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.19.5" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="8.0.0" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="8.0.0" />
    <PackageReference Include="SixLabors.ImageSharp" Version="3.1.1" />
    <PackageReference Include="System.Linq.Dynamic.Core" Version="1.3.7" />
  </ItemGroup>
  <ItemGroup>
    <None Exclude="$(SpaRoot)node_modules\**" Include="$(SpaRoot)**" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Throneteki.Data\Throneteki.Data.csproj" />
    <ProjectReference Include="..\Throneteki.DeckValidation\Throneteki.DeckValidation.csproj" />
    <ProjectReference Include="..\Throneteki.Models\Throneteki.Models.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="wwwroot\img\cards\" />
  </ItemGroup>
  <Target BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') " Name="DebugEnsureNodeEnv">
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Exec Command="node --version" ContinueOnError="true">
      <Output PropertyName="ErrorCode" TaskParameter="ExitCode" />
    </Exec>
    <Exec Command="npm install" WorkingDirectory="$(SpaRoot)" />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
  </Target>
  <Target AfterTargets="ComputeFilesToPublish" Name="PublishRunWebpack">
    <Exec Command="npm install" WorkingDirectory="$(SpaRoot)" />
    <Exec Command="npm run build" WorkingDirectory="$(SpaRoot)" />
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**" />
      <ResolvedFileToPublish Exclude="@(ResolvedFileToPublish)" Include="@(DistFiles->'%(FullPath)')">
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>